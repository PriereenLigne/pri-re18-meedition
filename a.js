// Fonction pour m√©langer les questions
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]]; // √âchange les √©l√©ments
    }
}
const questions = [
    { 
        question: "Quel roi a construit le temple de J√©rusalem ?", 
        options: ["David", "Salomon", "Sa√ºl"],
        correctAnswer: 1
    },
    { 
        question: "Qui a √©t√© aval√© par un grand poisson ?", 
        options: ["Jonas", "√âlie", "Mo√Øse"],
        correctAnswer: 0
    },
    { 
        question: "Quel disciple a march√© sur l'eau avec J√©sus ?", 
        options: ["Jean", "Pierre", "Jacques"],
        correctAnswer: 1
    },
];

// M√©langer les questions
shuffleArray(questions);

// Variables du jeu
let currentQuestionIndex = 0;
let score = 0;
let lives = 3;
let questionsPlayed = 0; // Nombre de questions r√©ellement jou√©es

// S√©lection des √©l√©ments HTML
const questionEl = document.getElementById("question");
const optionsEl = document.getElementById("options");
const nextButton = document.getElementById("next-button");
const stopButton = document.getElementById("stop-button");
const resultEl = document.getElementById("result");
const scoreCountEl = document.getElementById("score-count");
const lifeCountEl = document.getElementById("life-count");
const homeButton = document.getElementById("home-button");

// Fonction pour afficher la question
function showQuestion() {
    if (currentQuestionIndex >= questions.length || lives <= 0) {
        endGame();
        return;
    }

    const currentQuestion = questions[currentQuestionIndex];
    questionEl.textContent = currentQuestion.question;

    optionsEl.innerHTML = "";
    currentQuestion.options.forEach((option, index) => {
        const li = document.createElement("li");
        li.textContent = option;
        li.onclick = () => checkAnswer(index);
        optionsEl.appendChild(li);
    });

    resultEl.textContent = "";
}

// V√©rifier la r√©ponse
function checkAnswer(selectedIndex) {
    const currentQuestion = questions[currentQuestionIndex];
    questionsPlayed++; // Incr√©mentation du nombre de questions jou√©es

    if (selectedIndex === currentQuestion.correctAnswer) {
        score += 5; // Chaque bonne r√©ponse donne 5 points
    } else {
        lives--;
        resultEl.textContent = `‚ùå Mauvaise r√©ponse ! La bonne r√©ponse √©tait : ${currentQuestion.options[currentQuestion.correctAnswer]}`;
    }

    scoreCountEl.textContent = `${score}`;
    lifeCountEl.textContent = lives;

    currentQuestionIndex++;
    
    if (lives > 0) {
        setTimeout(showQuestion, 1000);
    } else {
        endGame();
    }
}

// Fonction pour terminer le jeu
function endGame() {
    optionsEl.innerHTML = "";  // Effacer les options de la derni√®re question
    questionEl.textContent = ""; // Ne pas afficher la derni√®re question
    nextButton.style.display = "none";  // Masquer le bouton "Suivant"
    stopButton.style.display = "none";  // Masquer le bouton "Arr√™ter"
    homeButton.style.display = "block"; // Afficher le bouton "Retour √† l'accueil"

    // Calcul du pourcentage bas√© sur les questions jou√©es
    const totalPoints = questionsPlayed * 5; // Le score total possible est bas√© sur les questions jou√©es
    const percentage = totalPoints > 0 ? (score / totalPoints) * 100 : 0; // √âviter division par z√©ro

    // Affichage du score et du pourcentage
    const scoreMessage = `${score / 5}/${questionsPlayed} r√©ponses correctes (${score}/${totalPoints} points) - ${Math.round(percentage)}%`;

    let message = "";
    if (percentage < 50) {
        message = "üòû Tu ne connais pas tes anc√™tres bibliques, va apprendre l'histoire !";
    } else if (percentage >= 50 && percentage < 100) {
        message = "üëè F√©licitations ! Tu es un rejeton du Lion de Juda, continue !";
    } else {
        message = "üéâ J√©sus est fier de toi, f√©licitations !";
    }

    resultEl.textContent = `${scoreMessage} - ${message}`;
}

// Passer √† la question suivante (mauvaise r√©ponse automatique)
nextButton.onclick = function() {
    lives--;
    questionsPlayed++; // Augmenter le compteur de questions jou√©es
    resultEl.textContent = `‚è≠Ô∏è Mauvaise r√©ponse automatique !`;
    scoreCountEl.textContent = `${score}`;
    lifeCountEl.textContent = lives;
    
    currentQuestionIndex++;
    if (lives > 0) {
        setTimeout(showQuestion, 1000);
    } else {
        endGame();
    }
};

// Arr√™ter le jeu
stopButton.onclick = endGame;

// Retour √† l'accueil
homeButton.onclick = function() {
    window.location.href = "jeux.html";
};

// Afficher la premi√®re question
showQuestion();